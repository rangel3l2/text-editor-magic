import { createGeminiClient } from "./geminiClient.ts";

class ContentValidator {
  private geminiClient;

  constructor() {
    this.geminiClient = createGeminiClient();
  }

  async validateTitle(title: string, sectionName: string = "T√≠tulo"): Promise<any> {
    try {
      console.log(`Validando t√≠tulo: ${title}`);
      
      // Se o t√≠tulo for muito curto, retornar erro
      if (title.length < 5) {
        return {
          isValid: false,
          feedbacks: [{
            id: `short-${Date.now()}`,
            type: 'warning',
            title: '‚ö†Ô∏è T√≠tulo muito curto',
            explanation: `O ${sectionName.toLowerCase()} precisa ser mais descritivo.`,
            suggestion: `Elabore o ${sectionName.toLowerCase()} para ter pelo menos 10 caracteres.`
          }]
        };
      }

      // Prompt para valida√ß√£o do t√≠tulo
      const prompt = `
      Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. Analise o t√≠tulo acad√™mico a seguir e avalie:

      T√≠tulo: "${title}"

      Avalie o t√≠tulo quanto a:
      1. Clareza e objetividade
      2. Adequa√ß√£o √† linguagem acad√™mica
      3. Precis√£o t√©cnica e terminol√≥gica
      4. Informatividade (se comunica bem o tema do trabalho)
      5. Concis√£o (se n√£o √© desnecessariamente longo)
      6. Gram√°tica e ortografia

      Retorne sua an√°lise no seguinte formato JSON com um array de feedbacks estruturados:
      {
        "isValid": boolean,
        "feedbacks": [
          {
            "type": "success" | "tip" | "warning" | "excellent",
            "title": "T√≠tulo curto (1 linha)",
            "explanation": "Explica√ß√£o breve (1-2 linhas)",
            "suggestion": "Sugest√£o pr√°tica (1 linha)"
          }
        ]
      }

      Tipos de feedback:
      - "excellent": Quando o t√≠tulo est√° impec√°vel
      - "success": Quando est√° bom mas tem pequenos detalhes a melhorar
      - "tip": Orienta√ß√µes para melhorar
      - "warning": Problemas que precisam aten√ß√£o

      Gere 1-3 feedbacks espec√≠ficos. Cada um deve seguir:
      - Emoji no t√≠tulo (üí° Dica / ‚ö†Ô∏è Aten√ß√£o / ‚úÖ Muito bem / ‚ú® Excelente)
      - T√≠tulo direto e motivador
      - Explica√ß√£o clara do ponto
      - Sugest√£o pr√°tica e aplic√°vel
      `;

      const response = await this.geminiClient.generateContent(prompt);
      const responseText = response.response.text();
      
      console.log("Resposta bruta:", responseText);
      
      // Encontrar e extrair o JSON da resposta
      const jsonMatch = responseText.match(/\{[\s\S]*\}/);
      
      if (!jsonMatch) {
        throw new Error("Formato de resposta inv√°lido");
      }
      
      const jsonStr = jsonMatch[0];
      const result = JSON.parse(jsonStr);
      
      // Garantir que o formato da resposta esteja correto
      return {
        isValid: result.isValid === true,
        feedbacks: Array.isArray(result.feedbacks) ? result.feedbacks.map((fb: any) => ({
          id: `${Date.now()}-${Math.random()}`,
          type: fb.type || 'tip',
          title: fb.title || 'Feedback',
          explanation: fb.explanation || '',
          suggestion: fb.suggestion || ''
        })) : []
      };
    } catch (error) {
      console.error("Erro na valida√ß√£o do t√≠tulo:", error);
      return {
        isValid: false,
        feedbacks: [{
          id: `error-${Date.now()}`,
          type: 'warning',
          title: '‚ö†Ô∏è Erro na valida√ß√£o',
          explanation: `N√£o foi poss√≠vel validar o t√≠tulo.`,
          suggestion: 'Tente novamente mais tarde ou continue editando normalmente.'
        }]
      };
    }
  }

  async validateContent(content: string, sectionName: string): Promise<any> {
    try {
      console.log(`Validando conte√∫do da se√ß√£o: ${sectionName}`);
      
      // Se o conte√∫do for muito curto, retornar erro
      if (content.length < 10) {
        return {
          isValid: false,
          feedbacks: [{
            id: `short-${Date.now()}`,
            type: 'warning',
            title: '‚ö†Ô∏è Conte√∫do muito curto',
            explanation: `O conte√∫do da se√ß√£o ${sectionName} precisa ser mais desenvolvido.`,
            suggestion: `Elabore o conte√∫do da se√ß√£o ${sectionName} para ter pelo menos 50 caracteres.`
          }]
        };
      }

      // Prompt para valida√ß√£o do conte√∫do, adaptado conforme a se√ß√£o
      let prompt = `
      Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
      Analise o conte√∫do da se√ß√£o "${sectionName}" a seguir e avalie:

      Conte√∫do: "${content.substring(0, 5000)}"

      Avalie o conte√∫do quanto a:
      1. Clareza e objetividade
      2. Adequa√ß√£o √† linguagem acad√™mica
      3. Coer√™ncia e coes√£o
      4. Precis√£o t√©cnica e terminol√≥gica
      5. Gram√°tica e ortografia

      Retorne sua an√°lise no seguinte formato JSON com um array de feedbacks estruturados:
      {
        "isValid": boolean,
        "feedbacks": [
          {
            "type": "success" | "tip" | "warning" | "excellent",
            "title": "T√≠tulo curto (1 linha)",
            "explanation": "Explica√ß√£o breve (1-2 linhas)",
            "suggestion": "Sugest√£o pr√°tica (1 linha)"
          }
        ]
      }

      Tipos de feedback:
      - "excellent": Quando est√° impec√°vel
      - "success": Quando est√° bom mas tem pequenos detalhes a melhorar
      - "tip": Orienta√ß√µes para melhorar
      - "warning": Problemas que precisam aten√ß√£o

      Gere 1-4 feedbacks espec√≠ficos. Cada um deve seguir:
      - Emoji no t√≠tulo (üí° / ‚ö†Ô∏è / ‚úÖ / ‚ú®)
      - T√≠tulo direto e motivador
      - Explica√ß√£o clara do ponto
      - Sugest√£o pr√°tica e aplic√°vel
      `;

      if (sectionName.toLowerCase().includes("introdu√ß√£o completa")) {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise o conte√∫do da Introdu√ß√£o a seguir e avalie com rigor seguindo as normas ABNT:

        Introdu√ß√£o: "${content.substring(0, 5000)}"

        Avalie rigorosamente se a introdu√ß√£o:
        1. Contextualiza adequadamente o tema com base em literatura recente
        2. Apresenta claramente a problem√°tica de pesquisa
        3. Indica a relev√¢ncia e justificativa do estudo
        4. Menciona explicitamente os objetivos do trabalho
        5. Possui coes√£o e coer√™ncia entre os par√°grafos
        6. Est√° livre de pleonasmos e redund√¢ncias
        7. Utiliza linguagem acad√™mica formal de acordo com a ABNT
        8. Est√° gramaticalmente correta
        9. Mant√©m uma estrutura l√≥gica: do geral para o espec√≠fico

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 2-5 feedbacks categorizados (estrutura, coer√™ncia, ABNT, linguagem, etc).
        Use: "excellent" para pontos impec√°veis, "success" para bons com melhorias menores, "tip" para orienta√ß√µes, "warning" para problemas cr√≠ticos.
        `;
      } else if (sectionName.toLowerCase() === "tema") {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise este par√°grafo de apresenta√ß√£o do tema de um trabalho acad√™mico:

        Tema: "${content.substring(0, 5000)}"

        Avalie se este componente da introdu√ß√£o:
        1. Contextualiza adequadamente o tema da pesquisa
        2. Apresenta informa√ß√µes atualizadas da literatura
        3. Situa o leitor no contexto geral do assunto
        4. Utiliza linguagem acad√™mica apropriada
        5. Est√° livre de erros gramaticais e pleonasmos
        6. Segue as normas da ABNT

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre a apresenta√ß√£o do tema.
        `;
      } else if (sectionName.toLowerCase() === "problema") {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise este par√°grafo de delimita√ß√£o do problema (problematiza√ß√£o) de um trabalho acad√™mico:

        Problema: "${content.substring(0, 5000)}"

        Avalie se este componente da introdu√ß√£o:
        1. Identifica claramente a lacuna no conhecimento atual
        2. Apresenta a quest√£o espec√≠fica que o estudo busca responder
        3. Afunila o tema para o problema espec√≠fico que ser√° estudado
        4. Utiliza linguagem acad√™mica apropriada
        5. Est√° livre de erros gramaticais e pleonasmos
        6. Segue as normas da ABNT

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre a delimita√ß√£o do problema.
        `;
      } else if (sectionName.toLowerCase() === "objetivos") {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise este par√°grafo de objetivos e justificativas de um trabalho acad√™mico:

        Objetivos: "${content.substring(0, 5000)}"

        Avalie se este componente da introdu√ß√£o:
        1. Apresenta claramente os objetivos do trabalho (geral e espec√≠ficos)
        2. Indica como a pesquisa pretende preencher a lacuna identificada
        3. Explica a relev√¢ncia e import√¢ncia do estudo
        4. Destaca as contribui√ß√µes esperadas para a √°rea de conhecimento
        5. Utiliza linguagem acad√™mica apropriada
        6. Est√° livre de erros gramaticais e pleonasmos
        7. Segue as normas da ABNT

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre objetivos e justificativas.
        `;
      } 
      else if (sectionName.toLowerCase().includes("introdu√ß√£o") || sectionName.toLowerCase().includes("tema") || sectionName.toLowerCase().includes("problema") || sectionName.toLowerCase().includes("objetivos")) {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise o conte√∫do da parte da Introdu√ß√£o (${sectionName}) a seguir e avalie:

        Conte√∫do: "${content.substring(0, 5000)}"

        Avalie se este componente da introdu√ß√£o:
        1. Atende ao prop√≥sito espec√≠fico desta se√ß√£o (tema, problema ou objetivos)
        2. Est√° redigido com clareza e precis√£o
        3. Utiliza linguagem acad√™mica apropriada
        4. Est√° livre de erros gramaticais
        5. Est√° coerente e bem estruturado

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos para esta parte da introdu√ß√£o.
        `;
      }
      // Mantenha as outras condi√ß√µes existentes
      else if (sectionName.toLowerCase().includes("metodologia")) {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise o conte√∫do da Metodologia a seguir e avalie:

        Metodologia: "${content.substring(0, 5000)}"

        Avalie se a metodologia:
        1. Descreve claramente os procedimentos metodol√≥gicos
        2. Especifica o tipo de pesquisa/estudo
        3. Detalha os materiais e m√©todos utilizados
        4. Explica como os dados foram coletados/analisados
        5. Utiliza terminologia adequada
        6. Est√° gramaticalmente correta

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre a metodologia.
        `;
      } else if (sectionName.toLowerCase().includes("resultado") || sectionName.toLowerCase().includes("discuss√£o")) {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise o conte√∫do da se√ß√£o de Resultados/Discuss√£o a seguir e avalie:

        Resultados/Discuss√£o: "${content.substring(0, 5000)}"

        Avalie se a se√ß√£o:
        1. Apresenta claramente os resultados encontrados
        2. Discute os achados em rela√ß√£o √† literatura
        3. Interpreta os dados de forma coerente
        4. Aborda limita√ß√µes (se aplic√°vel)
        5. Utiliza linguagem acad√™mica precisa
        6. Est√° gramaticalmente correta

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre resultados/discuss√£o.
        `;
      } else if (sectionName.toLowerCase().includes("conclus√£o")) {
        prompt = `
        Voc√™ √© um professor universit√°rio especializado em metodologia cient√≠fica. 
        Analise o conte√∫do da Conclus√£o a seguir e avalie:

        Conclus√£o: "${content.substring(0, 5000)}"

        Avalie se a conclus√£o:
        1. Sintetiza os principais resultados
        2. Retoma o objetivo inicial do trabalho
        3. Apresenta as conclus√µes/considera√ß√µes finais
        4. Indica contribui√ß√µes ou implica√ß√µes do estudo
        5. Sugere dire√ß√µes para pesquisas futuras (se aplic√°vel)
        6. Est√° gramaticalmente correta

        Retorne sua an√°lise no seguinte formato JSON com feedbacks estruturados:
        {
          "isValid": boolean,
          "feedbacks": [
            {
              "type": "success" | "tip" | "warning" | "excellent",
              "title": "T√≠tulo curto com emoji",
              "explanation": "Explica√ß√£o breve (1-2 linhas)",
              "suggestion": "Sugest√£o pr√°tica (1 linha)"
            }
          ]
        }

        Gere 1-3 feedbacks espec√≠ficos sobre a conclus√£o.
        Se precisar de melhorias, defina "isValid" como false, liste os problemas e forne√ßa sugest√µes espec√≠ficas.
        `;
      }

      const response = await this.geminiClient.generateContent(prompt);
      const responseText = response.response.text();
      
      console.log("Resposta da valida√ß√£o de conte√∫do:", responseText.substring(0, 200) + "...");
      
      // Encontrar e extrair o JSON da resposta
      const jsonMatch = responseText.match(/\{[\s\S]*\}/);
      
      if (!jsonMatch) {
        throw new Error("Formato de resposta inv√°lido");
      }
      
      const jsonStr = jsonMatch[0];
      const result = JSON.parse(jsonStr);
      
      // Garantir que o formato da resposta esteja correto com feedbacks estruturados
      return {
        isValid: result.isValid === true,
        feedbacks: Array.isArray(result.feedbacks) ? result.feedbacks.map((fb: any) => ({
          id: `${Date.now()}-${Math.random()}`,
          type: fb.type || 'tip',
          title: fb.title || 'Feedback',
          explanation: fb.explanation || '',
          suggestion: fb.suggestion || ''
        })) : []
      };
    } catch (error) {
      console.error("Erro na valida√ß√£o do conte√∫do:", error);
      return {
        isValid: false,
        feedbacks: [{
          id: `error-${Date.now()}`,
          type: 'warning',
          title: '‚ö†Ô∏è Erro na valida√ß√£o',
          explanation: `N√£o foi poss√≠vel validar o conte√∫do da se√ß√£o ${sectionName}.`,
          suggestion: 'Tente novamente mais tarde ou continue editando normalmente.'
        }]
      };
    }
  }
}

export const contentValidator = new ContentValidator();
